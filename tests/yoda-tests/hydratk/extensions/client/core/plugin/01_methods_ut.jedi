Test-Scenario-1:
  Id: ts_01
  Path: hydratk/extensions/client/core/plugin/01_methods_ut.jedi
  Name: ts_props
  Desc: Test property methods
  Author: Petr Rasek <bowman@hydratk.org>
  Version: 0.1
  
  Pre-Req: |
    from yodalib.hydratk.extensions.client.gui_client import GuiClient
    from yodahelpers.hydratk.extensions.client.core.plugin import get_instance, get_property
  
  Test-Case-1:
    Id: tc_01
    Name: tc_getters
    Desc: Getter methods
    
    Test-Condition-1: 
      Id: tco_01
      Name: tco_plugin_id
      Desc: Getter plugin_id
      
      Test: |
        c = GuiClient.get_instance()
        code = "prop, attr = get_property(get_instance(), name)"
        c.write_msg(code, [get_instance, get_property], input={'name': 'plugin_id'}, output=['prop', 'attr']) 
      
      Validate: |  
        prop, attr = c.read_msg('prop', 'attr')
        this.test_result = prop
        assert (prop == attr), 'prop != {0}'.format(attr)
        
    Test-Condition-2: 
      Id: tco_02
      Name: tco_plugin_name
      Desc: Getter plugin_name
      
      Test: |
        c.write_msg(code, [get_instance, get_property], input={'name': 'plugin_name'}, output=['prop', 'attr']) 
      
      Validate: |  
        prop, attr = c.read_msg('prop', 'attr')
        this.test_result = prop
        assert (prop == attr), 'prop != {0}'.format(attr)
        
    Test-Condition-3: 
      Id: tco_03
      Name: tco_plugin_version
      Desc: Getter plugin_version
      
      Test: |
        c.write_msg(code, [get_instance, get_property], input={'name': 'plugin_version'}, output=['prop', 'attr']) 
      
      Validate: |  
        prop, attr = c.read_msg('prop', 'attr')
        this.test_result = prop
        assert (prop == attr), 'prop != {0}'.format(attr)
        
    Test-Condition-4: 
      Id: tco_04
      Name: tco_plugin_author
      Desc: Getter plugin_author
      
      Test: |
        c.write_msg(code, [get_instance, get_property], input={'name': 'plugin_author'}, output=['prop', 'attr']) 
      
      Validate: |  
        prop, attr = c.read_msg('prop', 'attr')
        this.test_result = prop
        assert (prop == attr), 'prop != {0}'.format(attr)
        
    Test-Condition-5: 
      Id: tco_05
      Name: tco_plugin_year
      Desc: Getter plugin_year
      
      Test: |
        c.write_msg(code, [get_instance, get_property], input={'name': 'plugin_year'}, output=['prop', 'attr']) 
      
      Validate: |  
        prop, attr = c.read_msg('prop', 'attr')
        this.test_result = prop
        assert (prop == attr), 'prop != {0}'.format(attr)
        
    Test-Condition-6: 
      Id: tco_06
      Name: tco_cfg
      Desc: Getter cfg
      
      Test: |
        code = "prop, attr = get_property(get_instance(), name, True)"
        c.write_msg(code, [get_instance, get_property], input={'name': 'cfg'}, output=['prop', 'attr']) 
      
      Validate: |  
        prop, attr = c.read_msg('prop', 'attr')
        this.test_result = prop
        assert (prop == attr), 'prop != {0}'.format(attr)
        
    Test-Condition-7: 
      Id: tco_07
      Name: tco_root
      Desc: Getter root
      
      Test: |
        c.write_msg(code, [get_instance, get_property], input={'name': 'root'}, output=['prop', 'attr']) 
      
      Validate: |  
        prop, attr = c.read_msg('prop', 'attr')
        this.test_result = prop
        assert (prop == attr), 'prop != {0}'.format(attr)
        
    Test-Condition-8: 
      Id: tco_08
      Name: tco_config
      Desc: Getter config
      
      Test: |
        c.write_msg(code, [get_instance, get_property], input={'name': 'config'}, output=['prop', 'attr']) 
      
      Validate: |  
        prop, attr = c.read_msg('prop', 'attr')
        this.test_result = prop
        assert (prop == attr), 'prop != {0}'.format(attr)
        
    Test-Condition-9: 
      Id: tco_09
      Name: tco_trn
      Desc: Getter trn
      
      Test: |
        c.write_msg(code, [get_instance, get_property], input={'name': 'trn'}, output=['prop', 'attr']) 
      
      Validate: |  
        prop, attr = c.read_msg('prop', 'attr')
        this.test_result = prop
        assert (prop == attr), 'prop != {0}'.format(attr)
        
    Test-Condition-10: 
      Id: tco_10
      Name: tco_explorer
      Desc: Getter explorer
      
      Test: |
        c.write_msg(code, [get_instance, get_property], input={'name': 'explorer'}, output=['prop', 'attr']) 
      
      Validate: |  
        prop, attr = c.read_msg('prop', 'attr')
        this.test_result = prop
        assert (prop == attr), 'prop != {0}'.format(attr)
        
    Test-Condition-11: 
      Id: tco_11
      Name: tco_yoda_tree
      Desc: Getter yoda_tree
      
      Test: |
        c.write_msg(code, [get_instance, get_property], input={'name': 'yoda_tree'}, output=['prop', 'attr']) 
      
      Validate: |  
        prop, attr = c.read_msg('prop', 'attr')
        this.test_result = prop
        assert (prop == attr), 'prop != {0}'.format(attr)
        
    Test-Condition-12: 
      Id: tco_12
      Name: tco_editor
      Desc: Getter editor
      
      Test: |
        c.write_msg(code, [get_instance, get_property], input={'name': 'editor'}, output=['prop', 'attr']) 
      
      Validate: |  
        prop, attr = c.read_msg('prop', 'attr')
        this.test_result = prop
        assert (prop == attr), 'prop != {0}'.format(attr)
        
    Test-Condition-13: 
      Id: tco_13
      Name: tco_logger
      Desc: Getter logger
      
      Test: |
        c.write_msg(code, [get_instance, get_property], input={'name': 'logger'}, output=['prop', 'attr']) 
      
      Validate: |  
        prop, attr = c.read_msg('prop', 'attr')
        this.test_result = prop
        assert (prop == attr), 'prop != {0}'.format(attr)                                                                                                  